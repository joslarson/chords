{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/chord.js","src/js/chordset.js","src/js/sampledata.js"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as sampledata from './sampledata';\nimport ChordSet from './chordset';\n// import zazate from 'zazate.js';\n// import teoria from 'teoria';\n// import musicjs from 'musicjs';\n\n$(function(){\n    var chordset = new ChordSet(sampledata.chordset);\n    chordset.drawSvg();\n});\n\n// console.log(zazate.chords.determine(['E', 'A', 'D'], true));\n\n// console.log(teoria.note.fromKey(0).toString(true));","export default class Chord {\n    constructor(data, chordset) {\n        this.id = data['id'];\n        this.computedName = data['computed_name'];\n        this.description = data['description'];\n        this.fingers = data['fingers'];\n        this.mutes = data['mutes'];\n        this.chordset = chordset;\n\n        this.stringCount = chordset.strings.length;\n        this.columnCount = this.stringCount - 1;\n        this.fretRange = this.getFretRange();\n        this.fretBoundaries = this.getFretBoundaries();\n\n        this.cardMargins = [54, 37, 52, 37];\n        this.rowHeight = 34;\n        this.columnWidth = 26;\n\n        this.innerHeight = 4 + (this.fretRange.length * this.rowHeight) + 1;\n        this.height = this.cardMargins[0] + (this.fretRange.length * this.rowHeight) + this.cardMargins[2];\n        this.innerWidth = (this.columnCount * this.columnWidth) + 2;\n        this.width = this.innerWidth + this.cardMargins[1] + this.cardMargins[3];\n\n        this.snap = Snap(this.width, this.height);\n    }\n\n    drawSvg() {\n        var that = this;\n        var s = this.snap;\n\n        //////////////////////////////////////////////////////////\n        // draw frets\n\n        var patternOffsetX = 38 % this.columnWidth;\n        var patternOffsetY = 54 % this.rowHeight - .5;\n\n        var grid1 = s.g(\n            s.rect(0, 0, this.columnWidth, this.rowHeight),\n            s.path(`M${patternOffsetX},0,${patternOffsetX},${this.rowHeight}`).attr({\n                strokeWidth: 2\n            }),\n            s.path(`M0,${patternOffsetY},${this.columnWidth},${patternOffsetY}`).attr({\n                strokeWidth: 1\n            })\n        ).pattern(0, 0, this.columnWidth, this.rowHeight).attr({id: 'grid2'});\n\n        var grid2 = s.g(\n            s.rect(0, 0, this.columnWidth, this.rowHeight),\n            s.path(`M9,0,9,${this.rowHeight}`).attr({\n                strokeWidth: 2\n            }),\n            s.path(`M11.5,0,11.5,${this.rowHeight}`).attr({\n                strokeWidth: 1\n            }),\n            s.path(`M0,19.5,${this.columnWidth},19.5`).attr({\n                strokeWidth: 1\n            })\n        ).pattern(0, 0, this.columnWidth, this.rowHeight).attr({id: 'grid1'});\n\n        s.line(0, this.cardMargins[0] - 2, this.width, this.cardMargins[0] - 2).addClass('line top');\n        for (let i = 0; i < this.fretRange.length; i++) {\n            var fret = this.fretRange[i];\n\n            // draw fret lines\n            var top = this.cardMargins[0] + ((i + 1) * this.rowHeight) - .5;\n            s.line(0, top, this.width, top).addClass('line');\n\n            // draw fret numbers\n            s.text(this.cardMargins[1]/2, top - this.rowHeight/2 + 2, fret);\n            s.text(this.width - this.cardMargins[1]/2, top - this.rowHeight/2 + 2, fret);\n        }\n        s.line(0, this.height - this.cardMargins[2], this.width, this.height - this.cardMargins[2]).addClass('line bottom');\n        s.rect(this.cardMargins[1] + 1, this.cardMargins[0] - 3, this.innerWidth - 2, this.innerHeight - 2, 2, 2).addClass('inner-bg').attr({fill: grid1});\n        s.line(this.cardMargins[1] + 2, this.cardMargins[0] - 2, this.width - this.cardMargins[3] - 2, this.cardMargins[0] - 2).addClass('line top inner');\n\n        //////////////////////////////////////////////////////////\n        // draw marker dots\n\n        for(let i in this.fretRange){\n            let dotSize = 6;\n            if([3, 5, 7, 9, 15, 17, 19, 21].indexOf(this.fretRange[i]) > -1){\n                s.circle(this.width/2, this.cardMargins[0] + (this.rowHeight * i) + this.rowHeight / 2, dotSize).addClass('dot');\n            }\n            if([12].indexOf(this.fretRange[i]) > -1){\n                s.circle(this.width/2 - this.columnWidth, this.cardMargins[0] + (this.rowHeight * i) + this.rowHeight / 2, dotSize).addClass('dot');\n                s.circle(this.width/2 + this.columnWidth, this.cardMargins[0] + (this.rowHeight * i) + this.rowHeight / 2, dotSize).addClass('dot');\n            }\n        }\n\n        //////////////////////////////////////////////////////////\n        // draw tuning & mutes\n\n        let tunePoint = [this.cardMargins[3], this.cardMargins[0] / 2 + 1];\n        let mutePoint = [this.cardMargins[3], this.height - (this.cardMargins[2] / 2) + 2];\n        for (let i in this.chordset.strings) {\n            let string = this.chordset.strings[i];\n            let mute = this.mutes[i] ? '⤫' : '○';  // ○ ● ⦾ ⦿ ⨀ × ⤫ ✕\n\n            s.text(tunePoint[0], tunePoint[1], string);\n            s.text(mutePoint[0], mutePoint[1], mute);\n            tunePoint[0] += this.columnWidth;\n            mutePoint[0] += this.columnWidth;\n        }\n\n        //////////////////////////////////////////////////////////\n        // draw fingers\n\n        for(let fret in this.fretRange) {\n            let fretGroup = s.g(\n                // draw fret hover area\n                s.rect(\n                    0, \n                    this.cardMargins[0] + (fret * this.rowHeight),\n                    this.width,\n                    this.rowHeight\n                ).addClass('hover-region')\n            ).addClass('fret');\n            // draw string lines\n            for(let string = 1; string <= this.stringCount; string++) {\n                let startPoint = this.getFingerDrawPoint(this.fretRange[fret], string);\n                let endPoint = startPoint;\n                let lineArgs = [startPoint[0], startPoint[1], endPoint[0], endPoint[1]];\n                let fingerOuter = s.line(...lineArgs).addClass('outer');\n                fingerOuter.coords = [fret, string];\n                let fingerInner = s.line(...lineArgs).addClass('inner');\n                fingerInner.coords = [fret, string];\n                let fingerGroup = s.g(\n                    s.rect(\n                        this.width - this.cardMargins[1] - ((string - 1) * this.columnWidth) - (this.columnWidth / 2) - 1,\n                        this.cardMargins[0] + (fret * this.rowHeight),\n                        this.columnWidth,\n                        this.rowHeight\n                    ).addClass('hover-region'),\n                    fingerOuter,\n                    fingerInner\n                ).addClass('finger').mousedown(function(handler){\n                    if(this.hasClass('active')) {\n\n                    }\n                    this.toggleClass('active');\n                    if(this.hasClass('active')) {\n                        fretGroup.addClass('adding');\n                    } else {\n                        let x1 = parseInt(fingerInner.attr('x1'));\n                        fretGroup.addClass('removing');\n\n                        fingerInner.animate({x2: x1}, 100).removeClass('line');\n                        fingerOuter.animate({x2: x1}, 100).removeClass('line');\n                    }\n                }).drag(function(dx, dy, x, y, event) {\n                    fretGroup.addClass('dragging');\n                    let x1 = parseInt(fingerInner.attr('x1'));\n                    let x2 = parseInt(fingerInner.attr('x2'));\n                    let x2new = x1 + dx;\n\n                    for(let string = 1; string <= that.stringCount; string++) {\n                        // console.log('blah');\n                        let x = that.getFingerDrawPoint(fret, string)[0];\n                        let diff = Math.abs(x - x2new);\n                        // console.log(diff);\n                        if(diff < that.columnWidth / 2 + .5){\n                            x2new = x;\n                            // fingerOuter.x2 = x2new;\n                            if(fingerInner.x2 != x2new) {\n                                fingerInner.x2 = x2new;\n                                // console.log(x2, x2new);\n                                fingerInner.animate({x2: x2new}, 75);\n                                fingerOuter.animate({x2: x2new}, 75);\n\n                                if(x2new != x1){\n                                    fingerInner.addClass('line');\n                                    fingerOuter.addClass('line');\n                                } else {\n                                    fingerInner.removeClass('line');\n                                    fingerOuter.removeClass('line');\n                                }\n                            }\n                            break;\n                        }\n                    }\n\n\n                });\n                fretGroup.mouseup(function(handler) {\n                    this.removeClass('adding').removeClass('removing').removeClass('dragging');\n                });\n                fretGroup.append(fingerGroup);\n            }\n        }\n\n        // for (let finger of this.fingers) {\n        //     if(finger.length == 0) continue;\n\n        //     let pathParts = [];\n\n        //     var startPoint = this.getFingerDrawPoint(finger[0][1], finger[0][0]);\n        //     pathParts.push(`M${startPoint[0]} ${startPoint[1]}`);\n        //     for(let gridPoint of finger) {\n        //         let point = this.getFingerDrawPoint(gridPoint[1], gridPoint[0]);\n        //         pathParts.push(`${point[0]} ${point[1]}`);\n        //     }\n        //     let pathString = pathParts.join(', ');\n\n        //     let fingerOuter = s.path(pathString).addClass('outer');\n        //     let fingerInner = s.path(pathString).addClass('inner')\n        //     s.g(\n        //         fingerOuter,\n        //         fingerInner\n        //     ).addClass('finger');\n\n        //     if (finger.length > 1) {\n        //         fingerInner.addClass('line');\n        //         fingerOuter.addClass('line');\n        //     }\n        // }\n\n    }\n\n    getFretRange() {\n        var lowFret, highFret;\n        var fretRange = [];\n        var fretRangeBoudaries = [];\n\n        for (let finger of this.fingers) {\n            for (let pos of finger) {\n                lowFret = fretRangeBoudaries[0];\n                highFret = fretRangeBoudaries[1];\n\n                if(lowFret === undefined || pos[1] < lowFret) {\n                    fretRangeBoudaries[0] = pos[1];\n                }\n                if(highFret === undefined || pos[1] > highFret) {\n                    fretRangeBoudaries[1] = pos[1];\n                }\n            }\n        }\n\n        lowFret = fretRangeBoudaries[0];\n        highFret = fretRangeBoudaries[1];\n        if(highFret < 7) {\n            fretRangeBoudaries[0] = 1;\n            fretRangeBoudaries[1] = 6;\n        } else if(highFret - lowFret < 6) {\n            fretRangeBoudaries[1] = lowFret + 5;\n        }\n\n        for (let i = fretRangeBoudaries[0]; i <= fretRangeBoudaries[1]; i++) {\n            fretRange.push(i);\n        }\n\n        return fretRange;\n    }\n\n    getFretBoundaries(){\n        var result = [];\n        for(let fret of this.fretRange) {\n            result[fret] = [];\n        }\n        for(let finger of this.fingers) {\n            for(let coord of finger){\n                if(coord) result[coord[1]].push(coord[0]);\n            }\n        }\n        return result;\n    }\n\n    getFingerDrawPoint(fret, string) {\n        var startFret = this.fretRange[0];\n\n        var x = this.width - this.cardMargins[1] - (string - 1) * this.columnWidth - 1;\n        var y = this.cardMargins[0] + ((fret - startFret + 1) * this.rowHeight) - (this.rowHeight / 2);\n\n        return [x, y];\n    }\n}","import Chord from './chord';\n\nexport default class ChordSet {\n    constructor(data) {\n        this.id = data['id'];\n        this.name = data['name'];\n        this.description = data['description'];\n        this.url = data['url'];\n        this.instrument = data['instrument'];\n        this.tuning = data['tuning'];\n        this.computedKey = data['computed_key'];\n        this.strings = data['strings'];\n        this.capo = data['capo'];\n        this.chords = [];\n        data['chords'].forEach(chordData => this.chords.push(new Chord(chordData, this)));\n    }\n\n    drawSvg() {\n        for (let chord of this.chords) {\n            chord.drawSvg();\n        }\n    }\n}\n","export var chordset = {\n    \"id\": \"a590048c-957f-407a-9d58-fe71dfa77983\",\n    \"name\": \"\",\n    \"description\": \"\",\n    \"url\": \"\",\n    \"instrument\": \"standard-guitar\", // slug, can be custom-#####\n    \"tuning\": \"custom-853\", // allows us to easily match on non standard tunings, and filter by tuning\n    \"computed_key\": \"B Flat\", // allows us easily filter by key\n    \"strings\": ['E', 'A', 'D', 'G', 'B', 'E'], // string multiples with [array, ...] instead of [string, ...], num strings, tunings\n    \"capo\": [3, -5], // 0 for none, int fret, or array [int fret, int strings_covered] where strings covered is from string 1 if positive or the last string if negative (you can't have a capo in the middle of the strings)\n    \"chords\": [\n        {\n            \"id\": \"a590048c-957f-407a-9d58-fe71dfa77983\",\n            \"computed_name\": \"C\",\n            \"description\": \"\",\n            \"fingers\": [\n                [[1, 7]],\n                [[2, 8]],\n                [[3, 9], [4, 9]],\n                [],\n                [],\n                [],\n            ],\n            \"mutes\": [1, 1, 0, 0, 0, 0],\n        },\n        {\n            \"id\": \"a590048c-957f-407a-9d58-fe71dfa77983\",\n            \"computed_name\": \"F\",\n            \"description\": \"\",\n            \"fingers\": [\n                [[1, 2]],\n                [[2, 3]],\n                [[3, 4], [4, 4]],\n                [],\n                [],\n                [],\n            ],\n            \"mutes\": [1, 1, 0, 0, 0, 0],\n        },\n        {\n            \"id\": \"a590048c-957f-407a-9d58-fe71dfa77983\",\n            \"computed_name\": \"F\",\n            \"description\": \"\",\n            \"fingers\": [\n                [[1, 1]],\n                [[2, 2]],\n                [[4, 3]],\n                [[3, 3]],\n                [],\n                [],\n            ],\n            \"mutes\": [1, 1, 0, 0, 0, 0],\n        },\n        {\n            \"id\": \"a590048c-957f-407a-9d58-fe71dfa77983\",\n            \"computed_name\": \"F\",\n            \"description\": \"\",\n            \"fingers\": [\n                [],\n                [[2, 1]],\n                [[3, 2], [4, 2]],\n                [],\n                [],\n                [],\n            ],\n            \"mutes\": [1, 1, 0, 0, 0, 0],\n        },\n    ],\n};\n\n// export default chordSetSample;"]}